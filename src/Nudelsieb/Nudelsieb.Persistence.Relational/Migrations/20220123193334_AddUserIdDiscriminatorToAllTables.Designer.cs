// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nudelsieb.Persistence.Relational;

namespace Nudelsieb.Persistence.Relational.Migrations
{
    [DbContext(typeof(BraindumpDbContext))]
    [Migration("20220123193334_AddUserIdDiscriminatorToAllTables")]
    partial class AddUserIdDiscriminatorToAllTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Nudelsieb.Persistence.Relational.Entities.Group", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("NeuronId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Name", "NeuronId");

                    b.HasIndex("NeuronId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Nudelsieb.Persistence.Relational.Entities.Neuron", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Neurons");
                });

            modelBuilder.Entity("Nudelsieb.Persistence.Relational.Entities.Reminder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("At")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Nudelsieb.Persistence.Relational.Entities.Group", b =>
                {
                    b.HasOne("Nudelsieb.Persistence.Relational.Entities.Neuron", "Neuron")
                        .WithMany("Groups")
                        .HasForeignKey("NeuronId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nudelsieb.Persistence.Relational.Entities.Reminder", b =>
                {
                    b.HasOne("Nudelsieb.Persistence.Relational.Entities.Neuron", "Subject")
                        .WithMany("Reminders")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
